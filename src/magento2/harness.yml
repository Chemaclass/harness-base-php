---
harness('inviqa/magento2'):
  description: A docker based development environment for magento2
  require:
    services:
      - proxy
      - mail
    confd:
      - harness:/
    attributes:
      standard:
        - magento.edition
      secret:
        - magento.username
        - magento.password
---
attributes:
  app:
    web_owner: www-data
    web_group: www-data
    web_writable_dirs:
      - '/app/pub/media'
      - '/app/pub/static'
      - '/app/var'
      - '/app/var/export'
      - '/app/pub/static/frontend'
      - "= (@('app.mode') !== 'production' ? '/app/generated' : '')"
    services:
      - chrome
      - cron
      - mysql
      - redis
      - redis-session
      - elasticsearch
    web_directory: /app/pub
    export_directory: /app/var/export
    media_directory: = @('app.web_directory') ~ '/media'
  php:
    composer:
      major_version: "= version_compare(@('magento.version'), '2.4.2', '>=') ? 2 : 1"
    fpm:
      ini:
        max_execution_time: 18000
    ini:
      opcache.interned_strings_buffer: 64
      opcache.max_accelerated_files: 65407
      opcache.memory_consumption: 512
    install_extensions:
      - "= @('services.blackfire.enabled') ? 'blackfire' : ''"
      - "= @('services.tideways.enabled') ? 'tideways' : ''"
      - redis
      - sockets
    version: 7.4
  composer:
    auth:
      basic:
        magento:
          path: repo.magento.com
          username: = @('magento.username')
          password: = @('magento.password')
  database:
    user: magento
    pass: magento
    name: magento
  magento:
    edition: enterprise
    config:
      session:
        save: redis
    crypt:
      key: WmpzgYLfW8jwxTRKbACKqudJXcjJ4jqu
    run:
      code: []
      type: []
    static_content:
      adminhtml:
        languages: []
        themes: []
      frontend:
        languages: []
        themes: []
    version: 2.4.2
  backend:
    build:
      steps:
        - ~
        - ~
        - ~
        - ~
        - ~
    install:
      steps:
        - ~
        - ~
        - ~
        - ~
        - ~
        - ~
        - ~
        - ~
        - ~
        - ~
    init:
      steps:
        - ~
        - ~
        - ~
        - ~
        - ~
        - ~
        - ~
        - ~
        - ~
        - ~
    migrate:
      steps:
        - ~
        - ~
        - ~
    cron:
      jobs:
        - "= (@('app.mode') == 'production' ? '* * * * * /cron-run-with-env.sh \"/app/bin/magento cron:run & wait\"' : '')"
  framework:
    readme_blocks:
      - xml_urn_generation
  rabbitmq:
    vhosts:
      default: 'magento'
  persistence:
    enabled: false
    magento:
      export:
        claimName: magento-export-pvc
        mountPath: = @('app.export_directory')
        accessMode: ReadWriteMany # the requirement if persistence is enabled
        #storageClass: "..." most clusters need a custom storageclass
        #hostPath: "..." alternatively for single node testing
        size: 512Mi
      media:
        claimName: magento-media-pvc
        mountPath: = @('app.media_directory')
        accessMode: ReadWriteMany # the requirement if persistence is enabled
        #storageClass: "..." most clusters need a custom storageclass
        #hostPath: "..." alternatively for single node testing
        size: 1Gi
  nginx:
    # Magento has a complex webroot structure
    copy_directories: []
      # additional endpoints we don't need by default
      #- /app/setup/pub
      #- /app/update/pub
    php_fpm:
      conf:
        fastcgi_buffer_size: 128k
        # fastcgi_buffer_size (128k) + fastcgi_buffers's size (16k)
        fastcgi_busy_buffers_size: 144k

---
command('redis-flush'): |
  #!bash
  ws redis flush

command('redis flush'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(harness:/)|@
    docker-compose exec redis redis-cli flushall

command('magento %'):
  exec: |
    #!bash(workspace:/)|=
    passthru ws exec bin/magento ={input.argument('%')}
---
import:
  - harness/config/*.yml
  - harness/attributes/*.yml
  - harness/attributes/environment/={env('MY127WS_ENV','local')}.yml
