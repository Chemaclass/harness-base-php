---
harness('inviqa/magento1'):
  description: A docker based development environment for magento1
  require:
    services:
      - proxy
      - mail
    confd:
      - harness:/
    attributes:
      standard:
        - magento.edition
      secret:
        - composer.auth.github
        - magento.crypt.key
---
attributes:
  app:
    web_owner: www-data
    web_group: www-data
    web_writable_dirs:
      - '/app/public/media'
      - '/app/public/sitemaps'
      - '/app/public/staging'
      - '/app/public/var'
      - '/app/public/var/log'
      - '/app/public/var/report'
    services:
      - chrome
      - mysql
      - redis
      - redis-session
    web_directory: /app/public
    media_directory: = @('app.web_directory') ~ '/media'
  database:
    host: mysql
    user: magento
    pass: magento
    name: magento
  jenkins:
    tests:
      # Magento 1 connects to backend services during phstan analyse
      isolated: false
  php:
    entrypoint:
      steps:
        - |
          if [ -f /home/build/application/overlay/public/app/etc/local.xml.harness.template ]; then
            envsubst < /home/build/application/overlay/public/app/etc/local.xml.harness.template > /home/build/application/overlay/public/app/etc/local.xml
          fi
        - |
          if [ -f /app/public/app/etc/local.xml.harness.template ]; then
            envsubst < /app/public/app/etc/local.xml.harness.template > /app/public/app/etc/local.xml
          fi
    ini:
      opcache.max_accelerated_files: 32531
      opcache.memory_consumption: 320
    install_extensions:
      - "= @('services.blackfire.enabled') ? 'blackfire' : ''"
      - "= @('services.tideways.enabled') ? 'tideways' : ''"
      - memcached
      - redis
    version: 7.2
  magento:
    edition: enterprise
    version: 1.14.4.5
    environment: ''
    run:
      code: []
      type: []
    admin:
      path: admin
    config:
      session:
        save: redis
  backend:
    build:
      steps:
        - ~
        - ~
    install:
      steps:
        - ~
        - ~
        - ~
        - ~
        - ~
    init:
      steps:
        - ~
        - ~
        - ~
    migrate:
      steps:
        - ~
        - ~
        - ~
  persistence:
    enabled: false
    magento:
      media:
        claimName: magento-media-pvc
        mountPath: = @('app.media_directory')
        accessMode: ReadWriteMany # the requirement if persistence is enabled
        #storageClass: "..." most clusters need a custom storageclass
        #hostPath: "..." alternatively for single node testing
        size: 1Gi
---
command('redis-flush'): |
  #!bash(harness:/)|@
  docker-compose -p @('namespace') exec redis redis-cli flushall
---
import:
  - harness/config/*.yml
  - harness/attributes/*.yml
  - harness/attributes/environment/={env('MY127WS_ENV','local')}.yml
